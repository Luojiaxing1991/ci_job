#!/bin/bash
#

function init_net_export()
{
    echo "Begin to check eth rename info!"

    #we update the eth rename info to eth_map,then update TP/FIBRE info
    tmp_tp=0
    tmp_fi=0
    for i in ${!eth_map[*]}
    do
         tmp=`dmesg | grep -i "renamed from "${i} -w`
	 if [ x"${tmp}" == x"" ]
	 then
		 echo "The name of "${i}" is not renamed,Stay as "${eth_map[${i}]} 
	 else
	         tmp=`echo ${tmp%:*}`
	         tmp=`echo ${tmp##* }`
	         eth_map[${i}]=${tmp}
	         echo "The name of "${i}" is renamed as "${eth_map[${i}]}
	 fi
    done
}
#get the eth0's ip in server and client
#IN	: NA
#OUT: NA
function Init_Net_Ip()
{
	#get the ip of server
	LOCAL_IP=`ifconfig eth0 | grep 'inet addr:' | awk '{print $2}' | awk -F':' '{print $2}'`
	echo "The server's ip is ${LOCAL_IP}"

	#get the ip of slave board
	for tmpip in "${!ip_map[@]}"
	do
		if [ "$tmpip"x = "$LOCAL_IP"x ];then
			BACK_IP=${ip_map[$tmpip]}
			break
		fi
	done
	echo "The slave ip is ${BACK_IP}"

        init_net_export
}

# set ip for testing
# IN : NA
# OUT: NA
function Set_Test_Ip()
{
	#set local ip for testing
	ifconfig $LOCAL_ETHX ${local_port_ip[$ROCE_PORT]}

	#get the net's port according the roce's port
	REMOTE_ETHX=`ssh root@${BACK_IP} "cat /sys/class/infiniband/hns_0/ports/${ROCE_PORT}/gid_attrs/ndevs/0" `
        
        echo "The name of local_ethx is "${LOCAL_ETHX}
        echo "The name of remote_ethx is "${REMOTE_ETHX}

	#set remote ip for testing
	ssh root@${BACK_IP} "ifconfig ${LOCAL_ETHX} ${remote_port_ip[$ROCE_PORT]}"

	#check the network is ok
	ping ${remote_port_ip[$ROCE_PORT]} -c 6 > /dev/null
	[ $? != 0 ] && echo "The network isn't working between local $LOCAL_ETHX and remote $REMOTE_ETHX, please check!" && exit 1
}

# Establish a relationship of mutual trust between two boards
# IN : $1 The IP of eth0 in the board as client.
# OUT: N/A
function TrustRelation()
{
	which expect
	[ $? != 0 ] && apt-get install -y expect 1>/dev/null
	rm -f ~/.ssh/*
	ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
	#/usr/bin/expect << -EOF			#嵌套expect
	expect -c '
		set timeout -1
		set eth0ip '$1'
		spawn ssh-copy-id root@${eth0ip}
		expect {
			"(yes/no)" { send "yes\r";exp_continue }
			"*password:" { send "root\r"}
			}
		expect -re ":.*#"
		'
	#EOF						#嵌套结束
	return 0
}

function copy_tool_so()
{
	if [ ! -d /lib64 ]
	then
		ln -s /lib /lib64
	fi

	ssh root@${BACK_IP} " if [ ! -d /lib64 ]; then ln -s /lib /lib64; fi;\
						  if [ ! -d ${CASEPATH} ]; then mkdir ${CASEPATH}; fi "
	wait

	pushd ${ROCE_CASE_DIR}

	pushd so
	#cp -a * /lib/

	#rsync -l * root@${BACK_IP}:/lib/
        #需要对libibver.so.1重新软连接
	popd

#	scp ${ROCE_TOP_DIR}/case_script/4120/roce_test_main root@${BACK_IP}:${CASEPATH}/roce-test
        scp roce-client root@${BACK_IP}:${CASEPATH}/

	pushd test

	#modify the ib_port and servername according to the user's configuration
	sed -i "/ib_port/s/^[0-9.]\+\([ \t]\+\)/${ROCE_PORT}\1/" *
	sed -i "/servername/s/^[0-9.]\+\([ \t]\+\)/${local_port_ip[$ROCE_PORT]}\1/" *

	scp * root@${BACK_IP}:${CASEPATH}/
	popd


	pushd perftest
	scp * root@${BACK_IP}:${CASEPATH}/
	popd

	popd

	#config for the roce's kernel driver
	if [ ! -d /usr/local/etc/libibverbs.d ]
	then
		mkdir -p /usr/local/etc/libibverbs.d
		echo "driver hns" > /usr/local/etc/libibverbs.d/hns.driver
	fi

    ssh root@${BACK_IP} " if [ ! -d /usr/local/etc/libibverbs.d ]; \
	then \
		mkdir -p /usr/local/etc/libibverbs.d; \
		echo "driver hns" > /usr/local/etc/libibverbs.d/hns.driver; \
	fi; "
    wait

	return 0

}
#  call the implementation of the automation use cases
#  IN : N/A
#  OUT: N/A
function test_case_function_run()
{
	if [ x"${TEST_CASE_FUNCTION_SWITCH}" == x"on" ]
	then
		${TEST_CASE_FUNCTION_NAME}
		if [ x"${MESSAGE}" == x"PASS"  ];then
          		lava_report "${TEST_CASE_TITLE}" pass
		else
			lava_report "${TEST_CASE_TITLE}" fail
		fi
	else
		MESSAGE="BLOCK\tno automated use cases were implemented."
	fi
	#writePass "ROCE" "${TEST_CASE_TITLE"
}

# Output log file header
# IN : N/A
# OUT: N/A
function writeLogHeader
{
	echo -e "Designed Requirement ID\tTest Case ID\tTest Item\tTest Case Title\tAutomated scripts\tRealize the function\tSwitch\tResult\tReason" > ${ROCE_TOP_DIR}/${OUTPUT_TEST_DB_FILE}
	return 0
}
